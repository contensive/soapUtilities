'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
'
Namespace mbrMax
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MbrMaxWebServiceBinding", [Namespace]:="http://www.MemberMax.com/namespace/default")>  _
    Partial Public Class MbrMaxWebServiceWse
        Inherits Microsoft.Web.Services3.WebServicesClientProtocol
        
        Private SoapServicesTxtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SoapServicesBlobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.mbrMaxClient.My.MySettings.Default.WindowsApplication1_WebReference_MbrMaxWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SoapServicesTxtCompleted As SoapServicesTxtCompletedEventHandler
        
        '''<remarks/>
        Public Event SoapServicesBlobCompleted As SoapServicesBlobCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("MbrMaxWebService#SoapServicesTxt", RequestNamespace:="http://www.MemberMax.com/namespace/default", ResponseNamespace:="http://www.MemberMax.com/namespace/default")>  _
        Public Function SoapServicesTxt(ByVal inText As String) As <System.Xml.Serialization.SoapElementAttribute("outText")> String
            Dim results() As Object = Me.Invoke("SoapServicesTxt", New Object() {inText})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SoapServicesTxtAsync(ByVal inText As String)
            Me.SoapServicesTxtAsync(inText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SoapServicesTxtAsync(ByVal inText As String, ByVal userState As Object)
            If (Me.SoapServicesTxtOperationCompleted Is Nothing) Then
                Me.SoapServicesTxtOperationCompleted = AddressOf Me.OnSoapServicesTxtOperationCompleted
            End If
            Me.InvokeAsync("SoapServicesTxt", New Object() {inText}, Me.SoapServicesTxtOperationCompleted, userState)
        End Sub
        
        Private Sub OnSoapServicesTxtOperationCompleted(ByVal arg As Object)
            If (Not (Me.SoapServicesTxtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SoapServicesTxtCompleted(Me, New SoapServicesTxtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("MbrMaxWebService#SoapServicesBlob", RequestNamespace:="http://www.MemberMax.com/namespace/default", ResponseNamespace:="http://www.MemberMax.com/namespace/default")>  _
        Public Function SoapServicesBlob(ByVal inText As String) As <System.Xml.Serialization.SoapElementAttribute("outBlob", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("SoapServicesBlob", New Object() {inText})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SoapServicesBlobAsync(ByVal inText As String)
            Me.SoapServicesBlobAsync(inText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SoapServicesBlobAsync(ByVal inText As String, ByVal userState As Object)
            If (Me.SoapServicesBlobOperationCompleted Is Nothing) Then
                Me.SoapServicesBlobOperationCompleted = AddressOf Me.OnSoapServicesBlobOperationCompleted
            End If
            Me.InvokeAsync("SoapServicesBlob", New Object() {inText}, Me.SoapServicesBlobOperationCompleted, userState)
        End Sub
        
        Private Sub OnSoapServicesBlobOperationCompleted(ByVal arg As Object)
            If (Not (Me.SoapServicesBlobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SoapServicesBlobCompleted(Me, New SoapServicesBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MbrMaxWebServiceBinding", [Namespace]:="http://www.MemberMax.com/namespace/default")>  _
    Partial Public Class MbrMaxWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SoapServicesTxtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SoapServicesBlobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.mbrMaxClient.My.MySettings.Default.WindowsApplication1_WebReference_MbrMaxWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SoapServicesTxtCompleted As SoapServicesTxtCompletedEventHandler
        
        '''<remarks/>
        Public Event SoapServicesBlobCompleted As SoapServicesBlobCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("MbrMaxWebService#SoapServicesTxt", RequestNamespace:="http://www.MemberMax.com/namespace/default", ResponseNamespace:="http://www.MemberMax.com/namespace/default")>  _
        Public Function SoapServicesTxt(ByVal inText As String) As <System.Xml.Serialization.SoapElementAttribute("outText")> String
            Dim results() As Object = Me.Invoke("SoapServicesTxt", New Object() {inText})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SoapServicesTxtAsync(ByVal inText As String)
            Me.SoapServicesTxtAsync(inText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SoapServicesTxtAsync(ByVal inText As String, ByVal userState As Object)
            If (Me.SoapServicesTxtOperationCompleted Is Nothing) Then
                Me.SoapServicesTxtOperationCompleted = AddressOf Me.OnSoapServicesTxtOperationCompleted
            End If
            Me.InvokeAsync("SoapServicesTxt", New Object() {inText}, Me.SoapServicesTxtOperationCompleted, userState)
        End Sub
        
        Private Sub OnSoapServicesTxtOperationCompleted(ByVal arg As Object)
            If (Not (Me.SoapServicesTxtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SoapServicesTxtCompleted(Me, New SoapServicesTxtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("MbrMaxWebService#SoapServicesBlob", RequestNamespace:="http://www.MemberMax.com/namespace/default", ResponseNamespace:="http://www.MemberMax.com/namespace/default")>  _
        Public Function SoapServicesBlob(ByVal inText As String) As <System.Xml.Serialization.SoapElementAttribute("outBlob", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("SoapServicesBlob", New Object() {inText})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SoapServicesBlobAsync(ByVal inText As String)
            Me.SoapServicesBlobAsync(inText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SoapServicesBlobAsync(ByVal inText As String, ByVal userState As Object)
            If (Me.SoapServicesBlobOperationCompleted Is Nothing) Then
                Me.SoapServicesBlobOperationCompleted = AddressOf Me.OnSoapServicesBlobOperationCompleted
            End If
            Me.InvokeAsync("SoapServicesBlob", New Object() {inText}, Me.SoapServicesBlobOperationCompleted, userState)
        End Sub
        
        Private Sub OnSoapServicesBlobOperationCompleted(ByVal arg As Object)
            If (Not (Me.SoapServicesBlobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SoapServicesBlobCompleted(Me, New SoapServicesBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub SoapServicesTxtCompletedEventHandler(ByVal sender As Object, ByVal e As SoapServicesTxtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SoapServicesTxtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub SoapServicesBlobCompletedEventHandler(ByVal sender As Object, ByVal e As SoapServicesBlobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SoapServicesBlobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
